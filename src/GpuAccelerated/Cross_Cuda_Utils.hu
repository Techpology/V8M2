#ifndef CROSS_CUDA_UTILS_H
#define CROSS_CUDA_UTILS_H

#include <stdio.h>
#include <stdlib.h>

#ifdef __cplusplus
extern "C"
{
#endif

void Array1D_Cuda_KernelMap(int *_ThreadsNeeded, int *_BlocksNeeded, size_t _StrSize, int _chunkSize);

char *TPCUDA_Alloc_Str(char *_Str, size_t _StrSize);
char *TPCUDA_Alloc_StrEmpty(size_t _StrSize);
char *TPCUDA_GetStr(char *_Str, size_t _StrSize);

int *TPCUDA_Alloc_IntArrayEmpty(size_t _ElementsCount);
int *TPCUDA_GetIntArray(int *_IntArray, size_t _ElementsCount);

int **TPCUDA_Alloc_2DIntArrayEmpty(size_t _ElementsCount);
int **TPCUDA_Get2DIntArray(int **_2DIntArray, size_t _ElementsCount);

TPCross_HexIndexObj **TPCUDA_ALLOC_HexIndexObj(size_t _count);

void TPCUDA_Free_Str(char *_Str);
void TPCUDA_Free_IntArray(int *_Arr);
void TPCUDA_Free_2DIntArray(int **_IntArr, size_t _IntArrSize);

#ifdef __cplusplus
}
#endif

#endif
